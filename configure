#!/usr/bin/env python2

"""
Creates Makefile(s) for building this project.
"""

import argparse
import os
import sys
import subprocess
from logging import info, warning, error


if sys.version_info[0] == 3:
    warning("Warning: running configure with python3 might result in subtle errors.")

# Option handling
parser = argparse.ArgumentParser()
parser.add_argument('--with-veins', dest='veins', required=True, help="link with a version of Veins installed in PATH", metavar="PATH")
args = parser.parse_args()


# Start with default flags
makemake_flags = ['-f', '--deep', '--no-deep-includes', '--make-so', '-I', '.', '-o', 'plexe', '-O', 'out', '-p', 'PLEXE']
run_libs = [os.path.join('src', 'plexe')]
run_neds = [os.path.join('src', 'plexe')]
run_imgs = [os.path.join('images')]


# Add flags for Veins
check_fname = os.path.join(args.veins, 'src/veins/package.ned')
expect_version = '5'
if not os.path.isfile(check_fname):
    error('Could not find Veins (by looking for %s). Check the path to Veins (--with-veins=... option) and the Veins version (should be version %s)' % (check_fname, expect_version))
    sys.exit(1)

veins_header_dirs = [os.path.join(os.path.relpath(args.veins, 'src'), 'src')]
veins_includes = ['-I' + s for s in veins_header_dirs]
veins_link = ["-L" + os.path.join(os.path.relpath(args.veins, 'src'), 'src'), "-lveins$(D)"]
veins_defs = []

makemake_flags += veins_includes + veins_link + veins_defs
run_libs = [os.path.relpath(os.path.join(args.veins, 'src', 'veins'))] + run_libs
run_neds = [os.path.relpath(os.path.join(args.veins, 'src', 'veins'))] + run_neds
run_imgs = [os.path.relpath(os.path.join(args.veins, 'images'))] + run_imgs


# Start creating files
if not os.path.isdir('out'):
    os.mkdir('out')

f = open(os.path.join('out', 'config.py'), 'w')
f.write('run_libs = %s\n' % repr(run_libs))
f.write('run_neds = %s\n' % repr(run_neds))
f.write('run_imgs = %s\n' % repr(run_imgs))
f.close()

subprocess.check_call(['env', 'opp_makemake'] + makemake_flags, cwd='src')

info('Configure done. You can now run "make".')
